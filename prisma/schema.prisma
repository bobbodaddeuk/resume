generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Users {
    userId    Int      @id @default(autoincrement()) @map("userId")
    email     String   @unique @map("email")
    password  String   @map("password")
    createdAt DateTime @default(now()) @map("createdAt")
    updatedAt DateTime @updatedAt @map("updatedAt")

    userinfos UserInfos?
    resume    Resume?

    @@map("Users")
}

model UserInfos {
    userInfosId Int      @id @default(autoincrement()) @map("userInfosId")
    userId      Int      @unique @map("userId")
    name        String   @map("name")
    createdAt   DateTime @default(now()) @map("createdAt")
    updatedAt   DateTime @updatedAt @map("updatedAt")

    user Users @relation(fields: [userId], references: [userId], onDelete: Cascade)
}

model Resume {
    resumeId      Int        @id @default(autoincrement()) @map("resumeId")
    userId        Int        @unique @map("userId")
    name          String     @map("name")
    selfIntroduce String     @map("selfIntroduce") @db.Text
    userName      String     @map("userName")
    status        TaskStatus @default(APPLY) @map("status")

    user Users @relation(fields: [userId], references: [userId], onDelete: Cascade)
}

enum TaskStatus {
    APPLY
    DROP
    PASS
    INTERVIEW1
    INTERVIEW2
    FINAL_PASS
}
